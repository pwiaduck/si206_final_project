from bs4 import BeautifulSoup
import requests 
import json 
import sqlite3
import matplotlib.pyplot as plt
import os
import re

#  Client ID: MzMxMTQzMzB8MTY4MTY2NDgzMC44MjY1NjMx
#  app secret is 3373a058217d4c32f9d63156df24a5a1e1df1b337b8dd55665ad6d72da7f21f2

# https://api.seatgeek.com/2/events?client_id=MYCLIENTID

# Client ID: MzMxMTQzMzB8MTY4MTY5ODU5MC4wMjcyMjUz
# app secret = a690c0e907a03b4c2b760ba8d10013677be69f4fcf96858a435f2b37072b6b8d


def create_db(db):
    path = os.path.dirname(os.path.abspath(__file__))
    conn = sqlite3.connect(path+'/'+db)
    cur = conn.cursor()
    return cur, conn


def get_data(client_id, client_secret, cur, conn):
    # Client ID: MzMxMTQzMzB8MTY4MTY5ODU5MC4wMjcyMjUz
    # app secret = a690c0e907a03b4c2b760ba8d10013677be69f4fcf96858a435f2b37072b6b8d

    # GET https://api.seatgeek.com/2/venues?per_page=25&page=3
    # "https://api.seatgeek.com/2/events?client_id=MzMxMTQzMzB8MTY4MTY5ODU5MC4wMjcyMjUz&client_secret=a690c0e907a03b4c2b760ba8d10013677be69f4fcf96858a435f2b37072b6b8d&per_page=25&page=3"

    d = {}
    lst = []
    for page_num in range(1,5):
        # print(page_num)
        # print()
        url = "https://api.seatgeek.com/2/events?client_id=MzMxMTQzMzB8MTY4MTY5ODU5MC4wMjcyMjUz&client_secret=a690c0e907a03b4c2b760ba8d10013677be69f4fcf96858a435f2b37072b6b8d&per_page=25&page={}".format(page_num)

        response = requests.get(url)
        json_data = response.json()
        # print(json_data)
        # print()
        lst.append(json_data)
    # print(len(lst))
    return lst


def find_event_types(lst):
    types_lst = []
    for item in lst:
        for event in item["events"]:
            if event["type"] not in types_lst:
                types_lst.append(event["type"])    
    # print(types_lst)  
    return types_lst 


def create_type_table(cur, conn, lst):
    cur.execute("DROP TABLE IF EXISTS SeatGeek_types")
    cur.execute("CREATE TABLE SeatGeek_types (id INTEGER PRIMARY KEY, type TEXT)")
    for i in range(1, len(lst) + 1):
        cur.execute("INSERT INTO SeatGeek_types (id,type) VALUES (?,?)",(i,lst[i-1]))
        # print(i, lst[i-1])
    conn.commit()

def find_cities(lst):
    cities_lst = []
    for item in lst:
        for event in item["events"]:
            if event["venue"]["city"] not in cities_lst:
                cities_lst.append(event["venue"]["city"])    
    # print(cities_lst)  
    return cities_lst 

def create_cities_table(cur, conn, lst):
    cur.execute("DROP TABLE IF EXISTS SeatGeek_cities")
    cur.execute("CREATE TABLE SeatGeek_cities (id INTEGER PRIMARY KEY, city TEXT)")
    for i in range(1, len(lst) + 1):
        cur.execute("INSERT INTO SeatGeek_cities (id,city) VALUES (?,?)",(i,lst[i-1]))
        # print(i, lst[i-1])
    conn.commit()

def create_events_table(cur, conn, data, index, count):
    
    for event in data[index]["events"]:
        count += 1
        
        # ASSIGN EVENT TYPE NUM
        if event["type"] == "family":
               event_type = 1
        elif event["type"] == "auto_racing":
            event_type = 2
        elif event["type"] == "music_festival":
                event_type = 3
        elif event["type"] == "minor_league_baseball":
            event_type = 4
        elif event["type"] == "concert":
            event_type = 5
        elif event["type"] == "comedy":
            event_type = 6
        elif event["type"] == "broadway_tickets_national":
            event_type = 7
        elif event["type"] == "theater":
            event_type = 8
        elif event["type"] == "classical":
            event_type = 9 
        elif event["type"] == "cirque_du_soleil":  
            event_type = 10
        elif event["type"] == "rodeo":
            event_type = 11
        elif event["type"] == "nba":
            event_type = 12
        elif event["type"] == "dance_performance_tour":
            event_type = 13

        # ASSIGN LOCATION/CITY NUM
        if event["venue"]["city"] == "Zurich":
            location = 1
        elif event["venue"]["city"] == "Avondale":
            location = 2
        elif event["venue"]["city"] == "Las Vegas":
            location = 3
        elif event["venue"]["city"] == "Boston":
            location = 4
        elif event["venue"]["city"] == "Niagara Falls":
            location = 5
        elif event["venue"]["city"] == "Oxnard":
            location = 6
        elif event["venue"]["city"] == "Purcell":
            location = 7
        elif event["venue"]["city"] == "Minneapolis":
            location = 8
        elif event["venue"]["city"] == "Tampa":
            location = 9
        elif event["venue"]["city"] == "New York":
            location = 10
        elif event["venue"]["city"] == "Miami":
            location = 11
        elif event["venue"]["city"] == "Cincinnati":
            location = 12
        elif event["venue"]["city"] == "Detriot":
            location = 13
        elif event["venue"]["city"] == "Orlando":
            location = 14
        elif event["venue"]["city"] == "Royal Oak":
            location = 15
        elif event["venue"]["city"] == "North Myrtle Beach":
            location = 16 
        elif event["venue"]["city"] == "Moncton":
            location = 17
        elif event["venue"]["city"] == "Raleigh":
            location = 18
        elif event["venue"]["city"] == "Atlanta":
            location = 19
        elif event["venue"]["city"] == "Virginia Beach":
            location = 20
        elif event["venue"]["city"] == "Washington":
            location = 21
        elif event["venue"]["city"] == "Savannah":
            location = 22
        elif event["venue"]["city"] == "Clearwater":
            location = 23
        elif event["venue"]["city"] == "Roanoke":
            location = 24
        elif event["venue"]["city"] == "Columbia":
            location = 25
        elif event["venue"]["city"] == "Indianapolis":
            location = 26
        elif event["venue"]["city"] == "Pittsburgh":
            location = 27
        elif event["venue"]["city"] == "Toronto":
            location = 28 
        elif event["venue"]["city"] == "Red Bank":
            location = 29
        elif event["venue"]["city"] == "Alexandria":
            location = 30 
        elif event["venue"]["city"] == "Philadelphia":
            location = 31
        elif event["venue"]["city"] == "Charlotte":
            location = 32
        elif event["venue"]["city"] == "North Little Rock":
            location = 33
        elif event["venue"]["city"] == "Lake Grove":
            location = 34
        elif event["venue"]["city"] == "Austin":
            location = 35
        elif event["venue"]["city"] == "Kansas City":
            location = 36
        elif event["venue"]["city"] == "St. Louis":
            location = 37
        elif event["venue"]["city"] == "Syracuse":
            location = 38
        elif event["venue"]["city"] == "Englewood":
            location = 39 
        elif event["venue"]["city"] == "Jacksonville":
            location = 40
        elif event["venue"]["city"] == "Houston":
            location = 41
        elif event["venue"]["city"] == "San Antonio":
            location = 42
        elif event["venue"]["city"] == "Dallas":
            location = 43
        elif event["venue"]["city"] == "Brooklyn":
            location = 44
        elif event["venue"]["city"] == "Springfield":
            location = 45
        elif event["venue"]["city"] == "Denver":
            location = 46
        elif event["venue"]["city"] == "McKees Rocks":
            location = 47
        elif event["venue"]["city"] == "Charleston":
            location = 48
        elif event["venue"]["city"] == "Mobile":
            location = 49
        elif event["venue"]["city"] == "Kenner":
            location = 50
        elif event["venue"]["city"] == "Louisville":
            location = 51
        elif event["venue"]["city"] == "Salina":
            location = 52
        elif event["venue"]["city"] == "Saint Paul":
            location = 53
        elif event["venue"]["city"] == "Shreveport":
            location = 54
        elif event["venue"]["city"] == "Ames":
            location = 55
         
        year = re.findall("[\d]{4}", event["datetime_utc"])[0]
        month = (re.findall("\d+-\d+-\d+", event["datetime_utc"])[0]).split("-")[1]
        # location = event["venue"]["city"]
                
        timezone = event["venue"]["timezone"]
        capacity = event["venue"]["capacity"]
        country = event["venue"]["country"]
        state = event["venue"]["state"]
        venue = event["venue"]["name_v2"]
        capacity = event["venue"]["capacity"]
        performer = event["performers"][0]["name"]
                
        # print(count, performer, event_type, venue, location, capacity)
        cur.execute("INSERT INTO SeatGeek_events (id,performer,event,venue,location,capacity) VALUES (?,?,?,?,?,?)", (count, performer, event_type, venue, location, capacity))
    conn.commit()
    return count


def main():
    cur, conn = create_db("final.db")

    client_id = "MzMxMTQzMzB8MTY4MTY5ODU5MC4wMjcyMjUz"
    client_secret = "a690c0e907a03b4c2b760ba8d10013677be69f4fcf96858a435f2b37072b6b8d"
   
    data_lst = get_data(client_id, client_secret, cur, conn)

    event_types = find_event_types(data_lst)
    create_type_table(cur, conn, event_types)

    cities_lst = find_cities(data_lst)
    create_cities_table(cur, conn, cities_lst)

    cur.execute("DROP TABLE IF EXISTS SeatGeek_events")
    cur.execute("CREATE TABLE SeatGeek_events (id INTEGER PRIMARY KEY, performer TEXT, event INTEGER, venue TEXT, location TEXT, capacity INTEGER)")

    count1 = create_events_table(cur, conn, data_lst, 0, 0)
    count2 = create_events_table(cur, conn, data_lst, 1, count1 + 1)
    count3 = create_events_table(cur, conn, data_lst, 2, count2 + 1)
    count4 = create_events_table(cur, conn, data_lst, 3, count3 + 1)




main()

    

